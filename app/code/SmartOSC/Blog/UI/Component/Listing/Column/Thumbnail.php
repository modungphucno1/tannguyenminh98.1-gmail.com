<?phpnamespace SmartOSC\Blog\UI\Component\Listing\Column;use Magento\Framework\UrlInterface;use Magento\Framework\View\Element\UiComponent\ContextInterface;use Magento\Framework\View\Element\UiComponentFactory;use Magento\Store\Model\StoreManagerInterface;class Thumbnail extends \Magento\Ui\Component\Listing\Columns\Column{    const NAME = 'thumbnail';    const ALT_FIELD = 'name';    protected $storeManager;    protected $urlBuilder;    /**     * @param ContextInterface $context     * @param UiComponentFactory $uiComponentFactory     * @param StoreManagerInterface $storeManager     * @param UrlInterface $urlBuilder     * @param array $components     * @param array $data     */    public function __construct(        ContextInterface $context,        UiComponentFactory $uiComponentFactory,        StoreManagerInterface $storeManager,        UrlInterface $urlBuilder,        array $components = [],        array $data = []    )    {        parent::__construct($context, $uiComponentFactory, $components, $data);        $this->storeManager = $storeManager;        $this->urlBuilder = $urlBuilder;    }    /**     * Prepare Data Source     *     * @param array $dataSource     * @return array     * @throws \Magento\Framework\Exception\NoSuchEntityException     */    public function prepareDataSource(array $dataSource)    {        if (isset($dataSource['data']['items'])) {            $fieldName = $this->getData('name');            foreach ($dataSource['data']['items'] as & $item) {                $url = '';                if ($item[$fieldName] != '') {                    $url = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_MEDIA) . 'pathtoyourimage/' . $item[$fieldName];                }                $item[$fieldName . '_src'] = $url;                $item[$fieldName . '_alt'] = $this->getAlt($item) ?: '';                $item[$fieldName . '_link'] = $this->urlBuilder->getUrl('smartblog/post/edit', ['post_id' => $item['post_id']]);                $item[$fieldName . '_orig_src'] = $url;            }        }        return $dataSource;    }    /**                     * Get Alt                     *                     * @param array $row                     *                     * @return null|string                     */    protected function getAlt($row)    {        $altField = $this->getData('config/altField') ?: self::ALT_FIELD;        return isset($row[$altField]) ? $row[$altField] : null;    }}